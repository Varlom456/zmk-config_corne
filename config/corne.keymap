/*
 * Copyright (c) 2020 The ZMK Contributors
 *
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <100>;
    quick-tap-ms = <0>;
};

&mt { tapping-term-ms = <100>; };

/ {
    mscros {
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            label = "SCREENSHOT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_5>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_SHIFT>;
        };
    };

    macros {
    };

    behaviors {
        spaceTD: spaceTD+lt1 {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACETD";
            #binding-cells = <0>;
            bindings = <&lt 1 SPACE>, <&kp SPACE>;

            tapping-term-ms = <100>;
        };

        enterTD: enterTD+lt {
            compatible = "zmk,behavior-tap-dance";
            label = "ENTERTD";
            #binding-cells = <0>;
            bindings = <&lt 1 ENTER>, <&kp ENTER>;

            tapping-term-ms = <100>;
        };

        BspcTD: BspcTD+shft {
            compatible = "zmk,behavior-tap-dance";
            label = "BSPCTD";
            #binding-cells = <0>;
            bindings = <&mt RIGHT_SHIFT BACKSPACE>, <&kp BACKSPACE>;

            tapping-term-ms = <100>;
        };

        delTD: delTD {
            compatible = "zmk,behavior-tap-dance";
            label = "DELTD";
            #binding-cells = <0>;
            bindings = <&lt 2 DELETE>, <&kp DEL>;

            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LCMD RIGHT_BRACKET  &kp Q  &kp W  &kp E      &kp R               &kp T       &kp Y     &kp U    &kp I      &kp O    &kp P     &mt RGUI LEFT_BRACKET
&mt LCTRL GRAVE         &kp A  &kp S  &kp D      &kp F               &kp G       &kp H     &kp J    &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LEFT_ALT MINUS      &kp Z  &kp X  &kp C      &kp V               &kp B       &kp N     &kp M    &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_ALT BSLH
                                      &lt 2 TAB  &mt LEFT_SHIFT ESC  &spaceTD    &enterTD  &BspcTD  &delTD
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp BSLH
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR      &kp RPAR      &kp PIPE
&trans  &kp RBRC      &trans        &trans        &screenshot   &kp CAPS        &kp UNDER     &kp MINUS     &kp PLUS      &kp EQUAL     &kp LBRC      &kp LALT
                                    &mo 3         &trans        &trans          &trans        &trans        &mo 3
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp C_BRI_DEC  &kp C_BRI_UP  &kp C_PLAY  &kp C_PREV    &kp C_NEXT      &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &trans
&trans  &trans         &kp C_NEXT    &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
&trans  &bt BT_PRV     &bt BT_NXT    &trans      &trans        &trans          &trans    &trans    &trans  &trans     &trans   &trans
                                     &trans      &trans        &mo 3           &mo 3     &trans    &trans
            >;
        };

        another_layer {
            bindings = <
&trans  &trans      &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
